name: Test and Release

on: push

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Install latest npm
        run: |
          sudo npm install -g npm@
          npm config set update-notifier false
      - name: Install dependencies
        run: npm ci --no-audit
      - name: Test
        run: npm test
      - name: Set up stack for End-to-End tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          STACK_ID: bifravst-${{ github.sha }}
        run: |
          npx cdk -a 'node dist/cdk/cloudformation-sourcecode.js' deploy
          npx cdk -a 'node dist/cdk/cloudformation-test.js' deploy --require-approval never
          node cli historical-data --setup
      - name: End-to-End Tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          STACK_ID: bifravst-${{ github.sha }}
        run: |
          npm run test:e2e
      - name: Semantic release
        if: success()
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
        run: |
          npm i --no-save semantic-release@next
          npx semantic-release
      - name: Clean up End-to-End test resources
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          STACK_ID: bifravst-${{ github.sha }}
        run: |
          npx cdk -a 'node dist/cdk/cloudformation-test.js' destroy -f '*'
          npx cdk -a 'node dist/cdk/cloudformation-sourcecode.js' destroy -f '*'
