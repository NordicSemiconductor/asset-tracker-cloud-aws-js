name: Test and Release

on: push

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Install latest npm
        run: |
          sudo npm install -g npm@
          npm config set update-notifier false
      - name: Authenticate with NPM
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" > ~/.npmrc
      - name: Install dependencies
        run: npm ci --no-audit
      - name: Test
        run: npm test
      - name: Set up stack for End-to-End tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          STACK_ID: bifravst-${{ github.sha }}
          CI: 1
        run: |
          npx cdk -a 'node dist/cdk/cloudformation-sourcecode.js' deploy
          npx cdk -a 'node dist/cdk/cloudformation-test.js' deploy --require-approval never
          node cli historical-data --setup -d
          node cli register-ca
      - name: End-to-End Tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          STACK_ID: bifravst-${{ github.sha }}
        run: |
          npm run test:e2e
      - name: Semantic release
        if: success()
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # FIXME: remove use of pinned semantic-release when https://github.com/pvdlg/env-ci/pull/101 is merged
          npm i --no-save 'git+https://github.com/bifravst/semantic-release.git#next-with-env-ci-4.1.1'
          npx semantic-release
      - name: Clean up End-to-End test resources
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-central-1
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          STACK_ID: bifravst-${{ github.sha }}
          CI: 1
        run: |
          node cli drop-athena-resources
          node cli purge-buckets
          npx cdk -a 'node dist/cdk/cloudformation-test.js' destroy -f '*'
          npx cdk -a 'node dist/cdk/cloudformation-sourcecode.js' destroy -f '*'
