version: 0.2

env:
  shell: bash

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      # Next will install Node.js 18
      - n 18
      - npm install --global npm
  build:
    commands:
      # Install dependencies of nRF Asset Tracker for AWS
      - npm ci --no-audit
      # Export web app configuration
      - $(./cli.sh web-app-config -Q)
      - export INITIATOR_PIPELINE_NAME=`echo $CODEBUILD_INITIATOR | cut -d'/'
        -f2`
      - export SOURCE_VERSION=`aws codepipeline get-pipeline-state --name
        $INITIATOR_PIPELINE_NAME  | jq -r '.stageStates[0].actionStates[] |
        select(.actionName == "WebAppSourceCode").currentRevision.revisionId'`
      - export PUBLIC_VERSION=`cd $CODEBUILD_SRC_DIR_WebApp/; git ls-remote
        --tags $SOURCE_REPO_URL | grep $SOURCE_VERSION | cut -d'/' -f3 | cut
        -d'^' -f1`
      - export PUBLIC_VERSION=${PUBLIC_VERSION:-$SOURCE_VERSION}
      - export PUBLIC_URL="https://$PUBLIC_WEB_APP_DOMAIN_NAME"
      # Build web app
      - cd $CODEBUILD_SRC_DIR_WebApp/; npm ci --no-audit; npm run build
      # Upload to S3
      - aws s3 cp $CODEBUILD_SRC_DIR_WebApp/build
        s3://$PUBLIC_WEB_APP_BUCKET_NAME --recursive --metadata-directive
        REPLACE --cache-control 'public,max-age=600' --expires ''
      # Trigger CloudFront cache invalidation for index.html (all other files have unique names)
      - aws cloudfront create-invalidation --distribution-id
        $PUBLIC_CLOUDFRONT_DISTRIBUTION_ID --paths /,/index.html
