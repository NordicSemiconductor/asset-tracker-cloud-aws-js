version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 10
    commands:
      - apt-get install jq
      - npm install -g npm@
      - npm ci --no-audit
      - npx tsc
  build:
    commands:
      - ./cli/index.js react-config >
        $CODEBUILD_SRC_DIR_WebApp/.env.production.local
      - echo $SOURCE_REPO_URL
      - echo $CODEBUILD_INITIATOR
      - echo $CODEBUILD_INITIATOR | cut -d'/' -f2
      - export INITIATOR_PIPELINE_NAME=`echo $CODEBUILD_INITIATOR | cut -d'/'
        -f2`
      - echo $INITIATOR_PIPELINE_NAME
      - aws codepipeline get-pipeline-state --name $INITIATOR_PIPELINE_NAME  |
        jq -r '.stageStates[0].actionStates[] | select(.actionName ==
        "WebAppSourceCode").currentRevision.revisionId'
      - export SOURCE_VERSION=`aws codepipeline get-pipeline-state --name
        $INITIATOR_PIPELINE_NAME  | jq -r '.stageStates[0].actionStates[] |
        select(.actionName == "WebAppSourceCode").currentRevision.revisionId'`
      - echo $SOURCE_VERSION
      - git ls-remote --tags $SOURCE_REPO_URL
      - echo REACT_APP_VERSION=`git ls-remote --tags $SOURCE_REPO_URL | grep
        $SOURCE_VERSION | cut -d'/' -f3 | cut -d'^' -f1` >>
        $CODEBUILD_SRC_DIR_WebApp/.env.production.local
      - cat $CODEBUILD_SRC_DIR_WebApp/.env.production.local
      - export $(cat $CODEBUILD_SRC_DIR_WebApp/.env.production.local | xargs)
      - cd $CODEBUILD_SRC_DIR_WebApp/; npm ci --no-audit; npm run build;
      - aws s3 cp $CODEBUILD_SRC_DIR_WebApp/build
        s3://$REACT_APP_WEB_APP_BUCKET_NAME --recursive --metadata-directive
        REPLACE --cache-control 'public,max-age=600' --expires ''
      - aws cloudfront create-invalidation --distribution-id
        $REACT_APP_CLOUDFRONT_DISTRIBUTION_ID_WEB_APP --paths /,/index.html
